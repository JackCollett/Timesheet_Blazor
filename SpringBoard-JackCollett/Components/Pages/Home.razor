@page "/"
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer
@using static Components.Pages.Counter
@inject AppDbContext Db

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<Counter IncrementAmount="10" />

<br><br/>

<h1>DataBase:</h1>
<ul>
    @foreach (var entry in entries)
    {
        <li>
            Employee: @entry.Employee, Date: @entry.Today, Hours: @entry.Hours, Job: @entry.Job
        </li>
    }
</ul>
<form>
    <label for="enumber">Employee Number:</label>
    <input type="number" id="enumber" @bind="eNumber">
    <label for="date">Date:</label>
    <input type="date" id="date" @bind="date">
    <label for="j">Job Number:</label>
    <input type="number" id="j" @bind="job">
    <label for="h">Hours:</label>
    <input type="number" id="h" @bind="hours">
</form>
<button class="button btn-primary" @onclick="AddEntry">Add Entry</button>
@code {
    
    // List of entries 
    private List<TimesheetEntry> entries = new();

    protected override async Task OnInitializedAsync()
    {
        entries = await Db.TimesheetEntries.ToListAsync();
    }
    // Function for adding entries
        private int eNumber = 0;
        private DateOnly date = DateOnly.FromDateTime(DateTime.Now);
        private int job = 0;
        private int hours = 0;

        private async Task AddEntry()
    {
        var newEntry = new TimesheetEntry
        {
            Employee = eNumber, 
            Today = date, 
            Hours = hours, 
            Job = job
        };
        Db.TimesheetEntries.Add(newEntry);
        await Db.SaveChangesAsync();
        entries = await Db.TimesheetEntries.ToListAsync(); // Refresh
    }

}